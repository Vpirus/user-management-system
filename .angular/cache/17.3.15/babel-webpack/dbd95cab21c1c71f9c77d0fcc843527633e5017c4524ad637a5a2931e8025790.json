{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../_services\";\nimport * as i3 from \"@angular/common\";\nfunction VerifyEmailComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Verifying... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VerifyEmailComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1, \" Verification failed, you can also verify your account using the \");\n    i0.ɵɵelementStart(2, \"a\", 5);\n    i0.ɵɵtext(3, \"forget password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" page. \");\n    i0.ɵɵelementEnd();\n  }\n}\nvar EmailStatus;\n(function (EmailStatus) {\n  EmailStatus[EmailStatus[\"Verifying\"] = 0] = \"Verifying\";\n  EmailStatus[EmailStatus[\"Failed\"] = 1] = \"Failed\";\n})(EmailStatus || (EmailStatus = {}));\nexport class VerifyEmailComponent {\n  constructor(route, router, accountService, alertService) {\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.EmailStatus = EmailStatus;\n    this.emailStatus = EmailStatus.Verifying;\n  }\n  ngOnInit() {\n    const token = this.route.snapshot.queryParams['token'];\n    // remove token from url to prevent http referer leakage\n    this.router.navigate([], {\n      relativeTo: this.route,\n      replaceUrl: true\n    });\n    this.accountService.verifyEmail(token).pipe(first()).subscribe({\n      next: () => {\n        this.alertService.success('Verification successful, you can now login', {\n          keepAfterRouteChange: true\n        });\n        this.router.navigate(['/login']);\n      },\n      error: error => {\n        this.emailStatus = EmailStatus.Failed;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function VerifyEmailComponent_Factory(t) {\n      return new (t || VerifyEmailComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i2.AlertService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: VerifyEmailComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 5,\n      vars: 2,\n      consts: [[1, \"card-header\"], [1, \"card-body\"], [4, \"ngIf\"], [\"\", \"\", \"\", \"EmailStatus.Failed\", 4, \"ngIf\"], [\"\", \"\", \"\", \"EmailStatus.Failed\"], [\"routerLink\", \"forgot-password\"]],\n      template: function VerifyEmailComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\", 0);\n          i0.ɵɵtext(1, \"Verify Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 1);\n          i0.ɵɵtemplate(3, VerifyEmailComponent_div_3_Template, 2, 0, \"div\", 2)(4, VerifyEmailComponent_div_4_Template, 5, 0, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.emailStatus == ctx.EmailStatus.Verifying);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.emailStatus);\n        }\n      },\n      dependencies: [i3.NgIf, i1.RouterLink],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["first","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","EmailStatus","VerifyEmailComponent","constructor","route","router","accountService","alertService","emailStatus","Verifying","ngOnInit","token","snapshot","queryParams","navigate","relativeTo","replaceUrl","verifyEmail","pipe","subscribe","next","success","keepAfterRouteChange","error","Failed","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","AccountService","AlertService","selectors","decls","vars","consts","template","VerifyEmailComponent_Template","rf","ctx","ɵɵtemplate","VerifyEmailComponent_div_3_Template","VerifyEmailComponent_div_4_Template","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Gerard Tan\\Desktop\\GROUP-PROJECT\\New folder\\user-management-system\\src\\app\\account\\verify-email.component.ts","C:\\Users\\Gerard Tan\\Desktop\\GROUP-PROJECT\\New folder\\user-management-system\\src\\app\\account\\verify-email.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '../_services';\r\n\r\nenum EmailStatus {\r\n    Verifying,\r\n    Failed\r\n}\r\n\r\n@Component({ templateUrl: 'verify-email.component.html' })\r\nexport class VerifyEmailComponent implements OnInit {\r\n    EmailStatus = EmailStatus;\r\n    emailStatus = EmailStatus.Verifying;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        const token = this.route.snapshot.queryParams['token'];\r\n\r\n        // remove token from url to prevent http referer leakage\r\n        this.router.navigate([], { relativeTo: this.route, replaceUrl: true });\r\n\r\n        this.accountService.verifyEmail(token)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Verification successful, you can now login', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['/login']);\r\n                },\r\n                error: error => {\r\n                    this.emailStatus = EmailStatus.Failed;\r\n                }\r\n            });\r\n    }\r\n}","<h3 class=\"card-header\">Verify Email</h3>\r\n<div class=\"card-body\">\r\n    <div *ngIf=\"emailStatus == EmailStatus.Verifying\">\r\n        Verifying...\r\n    </div>\r\n    <div *ngIf=\"emailStatus\" == EmailStatus.Failed>\r\n        Verification failed, you can also verify your account using the <a routerLink=\"forgot-password\">forget password</a> page.\r\n    </div>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}