{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../_services\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction LoginComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_9_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, LoginComponent_div_9_div_1_Template, 2, 0, \"div\", 18)(2, LoginComponent_div_9_div_2_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"email\"].errors[\"required\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"email\"].errors[\"email\"]);\n  }\n}\nfunction LoginComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, LoginComponent_div_14_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"password\"].errors[\"required\"]);\n  }\n}\nfunction LoginComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 19);\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, route, router, accountService, alertService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.loading = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // reset alert on submit\n    this.alertService.clear();\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.accountService.login(this.f.email.value, this.f.password.value).pipe(first()).subscribe({\n      next: () => {\n        // get return url from query parameters or default to home page\n        const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n        this.router.navigateByUrl(returnUrl);\n      },\n      error: error => {\n        this.alertService.error(error);\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 25,\n      vars: 11,\n      consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"form-row\"], [1, \"form-group\", \"col\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"../register\", 1, \"btn\", \"btn-link\"], [1, \"form-group\", \"col\", \"text-right\"], [\"routerLink\", \"../forgot-password\", 1, \"btn\", \"btn-link\", \"pr-0\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 6);\n          i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 3, 2, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 8);\n          i0.ɵɵtext(12, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 9);\n          i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 10)(16, \"div\", 11)(17, \"button\", 12);\n          i0.ɵɵtemplate(18, LoginComponent_span_18_Template, 1, 0, \"span\", 13);\n          i0.ɵɵtext(19, \" Login \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"a\", 14);\n          i0.ɵɵtext(21, \"Register\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"div\", 15)(23, \"a\", 16);\n          i0.ɵɵtext(24, \"Forgot Password?\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f[\"email\"].errors));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"email\"].errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.f[\"password\"].errors));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["Validators","first","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_9_div_1_Template","LoginComponent_div_9_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","f","errors","LoginComponent_div_14_div_1_Template","ɵɵelement","LoginComponent","constructor","formBuilder","route","router","accountService","alertService","loading","submitted","ngOnInit","form","group","email","required","password","controls","onSubmit","clear","invalid","login","value","pipe","subscribe","next","returnUrl","snapshot","queryParams","navigateByUrl","error","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","ActivatedRoute","Router","i3","AccountService","AlertService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","LoginComponent_div_9_Template","LoginComponent_div_14_Template","LoginComponent_span_18_Template","ɵɵpureFunction1","_c0"],"sources":["C:\\Users\\Gerard Tan\\Desktop\\GROUP-PROJECT\\New folder\\user-management-system\\src\\app\\account\\login.component.ts","C:\\Users\\Gerard Tan\\Desktop\\GROUP-PROJECT\\New folder\\user-management-system\\src\\app\\account\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '../_services';\r\n\r\n@Component({ templateUrl: 'login.component.html' })\r\nexport class LoginComponent implements OnInit {\r\n    form: UntypedFormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: UntypedFormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            email: ['', [Validators.required, Validators.email]],\r\n            password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alert on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.accountService.login(this.f.email.value, this.f.password.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    // get return url from query parameters or default to home page\r\n                    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n                    this.router.navigateByUrl(returnUrl);\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n}","<div class=\"card\">\r\n    <h3 class=\"card-header\">Login</h3>\r\n    <div class=\"card-body\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email</label>\r\n                <input \r\n                    id=\"email\"\r\n                    type=\"text\" \r\n                    formControlName=\"email\" \r\n                    class=\"form-control\" \r\n                    [ngClass]=\"{ 'is-invalid': submitted && f['email'].errors }\" \r\n                />\r\n                <div *ngIf=\"submitted && f['email'].errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f['email'].errors['required']\">Email is required</div>\r\n                    <div *ngIf=\"f['email'].errors['email']\">Email is invalid</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input \r\n                    id=\"password\"\r\n                    type=\"password\" \r\n                    formControlName=\"password\" \r\n                    class=\"form-control\" \r\n                    [ngClass]=\"{ 'is-invalid': submitted && f['password'].errors }\" \r\n                />\r\n                <div *ngIf=\"submitted && f['password'].errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f['password'].errors['required']\">Password is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col\">\r\n                    <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                        Login\r\n                    </button>\r\n                    <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\r\n                </div>\r\n                <div class=\"form-group col text-right\">\r\n                    <a routerLink=\"../forgot-password\" class=\"btn btn-link pr-0\">Forgot Password?</a>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}