{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first, finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../_services\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction ForgotPasswordComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 10);\n  }\n}\nexport class ForgotPasswordComponent {\n  constructor(formBuilder, accountService, alertService) {\n    this.formBuilder = formBuilder;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.loading = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n  // Convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // Reset alerts on submit\n    this.alertService.clear();\n    // Stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.alertService.clear();\n    this.accountService.forgotPassword(this.f.email.value).pipe(first()).pipe(finalize(() => this.loading = false)).subscribe({\n      next: () => this.alertService.success('Please check your email for password reset instructions'),\n      error: error => this.alertService.error(error) // Use AlertService to handle the error\n    });\n  }\n  static {\n    this.ɵfac = function ForgotPasswordComponent_Factory(t) {\n      return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i2.AlertService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ForgotPasswordComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 16,\n      vars: 8,\n      consts: [[1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-content\", 3, \"ngClass\"], [4, \"ngIf\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1 \", 4, \"ngIf\"], [\"routerLink\", \"../login\", 1, \"btn\", \"btn-link\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n      template: function ForgotPasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\", 0);\n          i0.ɵɵtext(1, \"Forgot Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 5);\n          i0.ɵɵtemplate(8, ForgotPasswordComponent_div_8_Template, 2, 0, \"div\", 6)(9, ForgotPasswordComponent_div_9_Template, 2, 0, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 3)(11, \"button\", 7);\n          i0.ɵɵtemplate(12, ForgotPasswordComponent_span_12_Template, 1, 0, \"span\", 8);\n          i0.ɵɵtext(13, \" Submit \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"a\", 9);\n          i0.ɵɵtext(15, \"Cancel\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.submitted && ctx.f.email.errors));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.f.email.errors.required);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.f.email.errors.email);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.RouterLink],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["Validators","first","finalize","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ForgotPasswordComponent","constructor","formBuilder","accountService","alertService","loading","submitted","ngOnInit","form","group","email","required","f","controls","onSubmit","clear","invalid","forgotPassword","value","pipe","subscribe","next","success","error","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","AccountService","AlertService","selectors","decls","vars","consts","template","ForgotPasswordComponent_Template","rf","ctx","ɵɵlistener","ForgotPasswordComponent_Template_form_ngSubmit_3_listener","ɵɵtemplate","ForgotPasswordComponent_div_8_Template","ForgotPasswordComponent_div_9_Template","ForgotPasswordComponent_span_12_Template","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","errors"],"sources":["C:\\Users\\Gerard Tan\\Desktop\\GROUP-PROJECT\\New folder\\user-management-system\\src\\app\\account\\forgot-password.component.ts","C:\\Users\\Gerard Tan\\Desktop\\GROUP-PROJECT\\New folder\\user-management-system\\src\\app\\account\\forgot-password.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { first, finalize } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '../_services';\r\n\r\n@Component({ templateUrl: 'forgot-password.component.html' })\r\nexport class ForgotPasswordComponent implements OnInit {\r\n    form: UntypedFormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: UntypedFormBuilder,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            email: ['', [Validators.required, Validators.email]]\r\n        });\r\n    }\r\n\r\n    // Convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // Reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // Stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.alertService.clear();\r\n        this.accountService.forgotPassword(this.f.email.value)\r\n            .pipe(first())\r\n            .pipe(finalize(() => this.loading = false))\r\n            .subscribe({\r\n                next: () => this.alertService.success('Please check your email for password reset instructions'),\r\n                error: error => this.alertService.error(error) // Use AlertService to handle the error\r\n            });\r\n    }\r\n}","<h3 class=\"card-header\">Forgot Password</h3>\r\n<div class=\"card-body\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-content\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n            <div *ngIf=\"f.email.errors.email\">Email is invalid</div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1 \"></span>\r\n                Submit\r\n            </button>\r\n            <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\r\n        </div>\r\n    </form>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}