{"ast":null,"code":"import { NavigationStart } from '@angular/router';\nimport { AlertType } from '../_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../_services\";\nimport * as i3 from \"@angular/common\";\nfunction AlertComponent_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 4);\n    i0.ɵɵlistener(\"click\", function AlertComponent_div_0_div_2_Template_a_click_1_listener() {\n      const alert_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.removeAlert(alert_r2));\n    });\n    i0.ɵɵtext(2, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const alert_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r2.cssClasses(alert_r2));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"innerHTML\", alert_r2.message, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction AlertComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵtemplate(2, AlertComponent_div_0_div_2_Template, 4, 4, \"div\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.alerts);\n  }\n}\nexport class AlertComponent {\n  constructor(router, alertService) {\n    this.router = router;\n    this.alertService = alertService;\n    this.id = 'default-alert';\n    this.fade = true;\n    this.alerts = [];\n  }\n  ngOnInit() {\n    // subscribe to new alert notifications\n    this.alertSubscription = this.alertService.onAlert(this.id).subscribe(alert => {\n      // clear alerts when an empty alert is received\n      if (!alert.message) {\n        // filter out alerts without 'keepAfterRouteChange' flag\n        this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n        // remove 'keepAfterRouteChange' flag on the rest\n        this.alerts.forEach(x => x.keepAfterRouteChange = false);\n        return;\n      }\n      // add alert to array\n      this.alerts.push(alert);\n      // auto close alert if required\n      if (alert.autoClose) {\n        setTimeout(() => this.removeAlert(alert), 3000);\n      }\n    });\n    // clear alerts on location change\n    this.routeSubscription = this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        this.alertService.clear(this.id);\n      }\n    });\n  }\n  ngOnDestroy() {\n    // unsubscribe to avoid memory leaks\n    this.alertSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n  removeAlert(alert) {\n    // check if already removed to prevent error on auto close\n    if (!this.alerts.includes(alert)) return;\n    if (this.fade) {\n      // fade out alert\n      alert.fade = true;\n      // remove alert after faded out\n      setTimeout(() => {\n        this.alerts = this.alerts.filter(x => x !== alert);\n      }, 250);\n    } else {\n      // remove alert\n      this.alerts = this.alerts.filter(x => x !== alert);\n    }\n  }\n  cssClasses(alert) {\n    if (!alert) return;\n    const classes = ['alert', 'alert-dismissible'];\n    const alertTypeClass = {\n      [AlertType.Success]: 'alert-success',\n      [AlertType.Error]: 'alert-danger',\n      [AlertType.Info]: 'alert-info',\n      [AlertType.Warning]: 'alert-warning'\n    };\n    classes.push(alertTypeClass[alert.type]);\n    if (alert.fade) {\n      classes.push('fade');\n    }\n    return classes.join(' ');\n  }\n  static {\n    this.ɵfac = function AlertComponent_Factory(t) {\n      return new (t || AlertComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AlertService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AlertComponent,\n      selectors: [[\"alert\"]],\n      inputs: {\n        id: \"id\",\n        fade: \"fade\"\n      },\n      decls: 1,\n      vars: 1,\n      consts: [[\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [1, \"m-3\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [1, \"close\", 3, \"click\"], [3, \"innerHTML\"]],\n      template: function AlertComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AlertComponent_div_0_Template, 3, 1, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.alerts.length);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["NavigationStart","AlertType","i0","ɵɵelementStart","ɵɵlistener","AlertComponent_div_0_div_2_Template_a_click_1_listener","alert_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","removeAlert","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵclassMap","cssClasses","ɵɵadvance","ɵɵproperty","message","ɵɵsanitizeHtml","ɵɵtemplate","AlertComponent_div_0_div_2_Template","alerts","AlertComponent","constructor","router","alertService","id","fade","ngOnInit","alertSubscription","onAlert","subscribe","alert","filter","x","keepAfterRouteChange","forEach","push","autoClose","setTimeout","routeSubscription","events","event","clear","ngOnDestroy","unsubscribe","includes","classes","alertTypeClass","Success","Error","Info","Warning","type","join","ɵɵdirectiveInject","i1","Router","i2","AlertService","selectors","inputs","decls","vars","consts","template","AlertComponent_Template","rf","ctx","AlertComponent_div_0_Template","length"],"sources":["C:\\Users\\Gerard Tan\\Desktop\\GROUP-PROJECT\\New folder\\user-management-system\\src\\app\\_components\\alert.component.ts","C:\\Users\\Gerard Tan\\Desktop\\GROUP-PROJECT\\New folder\\user-management-system\\src\\app\\_components\\alert.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Alert, AlertType } from '../_models';\r\nimport { AlertService } from '../_services';\r\n\r\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n    @Input() id = 'default-alert';\r\n    @Input() fade = true;\r\n\r\n    alerts: Alert[] = [];\r\n    alertSubscription!: Subscription;\r\n    routeSubscription!: Subscription;\r\n\r\n    constructor(private router: Router, private alertService: AlertService) { }\r\n\r\n    ngOnInit() {\r\n        // subscribe to new alert notifications\r\n        this.alertSubscription = this.alertService.onAlert(this.id)\r\n            .subscribe(alert => {\r\n                // clear alerts when an empty alert is received\r\n                if (!alert.message) {\r\n                    // filter out alerts without 'keepAfterRouteChange' flag\r\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\r\n\r\n                    // remove 'keepAfterRouteChange' flag on the rest\r\n                    this.alerts.forEach(x => x.keepAfterRouteChange = false);\r\n                    return;\r\n                }\r\n\r\n                // add alert to array\r\n                this.alerts.push(alert);\r\n\r\n                // auto close alert if required\r\n                if (alert.autoClose) {\r\n                    setTimeout(() => this.removeAlert(alert), 3000);\r\n                }\r\n            });\r\n\r\n        // clear alerts on location change\r\n        this.routeSubscription = this.router.events.subscribe(event => {\r\n            if (event instanceof NavigationStart) {\r\n                this.alertService.clear(this.id);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // unsubscribe to avoid memory leaks\r\n        this.alertSubscription.unsubscribe();\r\n        this.routeSubscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert: Alert) {\r\n        // check if already removed to prevent error on auto close\r\n        if (!this.alerts.includes(alert)) return;\r\n\r\n        if (this.fade) {\r\n            // fade out alert\r\n            alert.fade = true;\r\n\r\n            // remove alert after faded out\r\n            setTimeout(() => {\r\n                this.alerts = this.alerts.filter(x => x !== alert);\r\n            }, 250);\r\n        } else {\r\n            // remove alert\r\n            this.alerts = this.alerts.filter(x => x !== alert);\r\n        }\r\n    }\r\n\r\n    cssClasses(alert: Alert) {\r\n        if (!alert) return;\r\n\r\n        const classes = ['alert', 'alert-dismissible'];\r\n\r\n        const alertTypeClass = {\r\n            [AlertType.Success]: 'alert-success',\r\n            [AlertType.Error]: 'alert-danger',\r\n            [AlertType.Info]: 'alert-info',\r\n            [AlertType.Warning]: 'alert-warning'\r\n        }\r\n\r\n        classes.push(alertTypeClass[alert.type]);\r\n\r\n        if (alert.fade) {\r\n            classes.push('fade');\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n}","<div *ngIf=\"alerts.length\" class=\"container\">\r\n    <div class=\"m-3\">\r\n        <div *ngFor=\"let alert of alerts\" class=\"{{cssClasses(alert)}}\">\r\n            <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n            <span [innerHTML]=\"alert.message\"></span>\r\n        </div>\r\n    </div>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}